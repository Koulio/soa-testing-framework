//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.01 at 05:24:47 PM BST 
//


package org.archenroot.fw.soatest.configuration;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the a package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _SoaTestingFramework_QNAME = new QName("http://www.archenroot.org/SoaTestingFramework", "soaTestingFramework");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: a
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Cluster }
     * 
     */
    public Cluster createCluster() {
        return new Cluster();
    }

    /**
     * Create an instance of {@link SoaTestingFramework }
     * 
     */
    public SoaTestingFramework createSoaTestingFramework() {
        return new SoaTestingFramework();
    }

    /**
     * Create an instance of {@link Database }
     * 
     */
    public Database createDatabase() {
        return new Database();
    }

    /**
     * Create an instance of {@link DatabaseConfiguration }
     * 
     */
    public DatabaseConfiguration createDatabaseConfiguration() {
        return new DatabaseConfiguration();
    }

    /**
     * Create an instance of {@link FileConfiguation }
     * 
     */
    public FileConfiguation createFileConfiguation() {
        return new FileConfiguation();
    }

    /**
     * Create an instance of {@link FtpConfiguration }
     * 
     */
    public FtpConfiguration createFtpConfiguration() {
        return new FtpConfiguration();
    }

    /**
     * Create an instance of {@link GlobalConfiguration }
     * 
     */
    public GlobalConfiguration createGlobalConfiguration() {
        return new GlobalConfiguration();
    }

    /**
     * Create an instance of {@link JMSModule }
     * 
     */
    public JMSModule createJMSModule() {
        return new JMSModule();
    }

    /**
     * Create an instance of {@link JMSServer }
     * 
     */
    public JMSServer createJMSServer() {
        return new JMSServer();
    }

    /**
     * Create an instance of {@link ConnectionFactory }
     * 
     */
    public ConnectionFactory createConnectionFactory() {
        return new ConnectionFactory();
    }

    /**
     * Create an instance of {@link Topic }
     * 
     */
    public Topic createTopic() {
        return new Topic();
    }

    /**
     * Create an instance of {@link Queue }
     * 
     */
    public Queue createQueue() {
        return new Queue();
    }

    /**
     * Create an instance of {@link JmsConfiguration }
     * 
     */
    public JmsConfiguration createJmsConfiguration() {
        return new JmsConfiguration();
    }

    /**
     * Create an instance of {@link Resources }
     * 
     */
    public Resources createResources() {
        return new Resources();
    }

    /**
     * Create an instance of {@link MappingConfiguration }
     * 
     */
    public MappingConfiguration createMappingConfiguration() {
        return new MappingConfiguration();
    }

    /**
     * Create an instance of {@link Service }
     * 
     */
    public Service createService() {
        return new Service();
    }

    /**
     * Create an instance of {@link Services }
     * 
     */
    public Services createServices() {
        return new Services();
    }

    /**
     * Create an instance of {@link AdminServer }
     * 
     */
    public AdminServer createAdminServer() {
        return new AdminServer();
    }

    /**
     * Create an instance of {@link a.ManagedServer }
     * 
     */
    public org.archenroot.fw.soatest.configuration.ManagedServer createManagedServer() {
        return new org.archenroot.fw.soatest.configuration.ManagedServer();
    }

    /**
     * Create an instance of {@link OsbConfiguration }
     * 
     */
    public OsbConfiguration createOsbConfiguration() {
        return new OsbConfiguration();
    }

    /**
     * Create an instance of {@link ServiceIdentification }
     * 
     */
    public ServiceIdentification createServiceIdentification() {
        return new ServiceIdentification();
    }

    /**
     * Create an instance of {@link SoapConfiguration }
     * 
     */
    public SoapConfiguration createSoapConfiguration() {
        return new SoapConfiguration();
    }

    /**
     * Create an instance of {@link ToolConfiguration }
     * 
     */
    public ToolConfiguration createToolConfiguration() {
        return new ToolConfiguration();
    }

    /**
     * Create an instance of {@link XmlConfiguration }
     * 
     */
    public XmlConfiguration createXmlConfiguration() {
        return new XmlConfiguration();
    }

    /**
     * Create an instance of {@link Cluster.ManagedServer }
     * 
     */
    public Cluster.ManagedServer createClusterManagedServer() {
        return new Cluster.ManagedServer();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SoaTestingFramework }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.archenroot.org/SoaTestingFramework", name = "soaTestingFramework")
    public JAXBElement<SoaTestingFramework> createSoaTestingFramework(SoaTestingFramework value) {
        return new JAXBElement<SoaTestingFramework>(_SoaTestingFramework_QNAME, SoaTestingFramework.class, null, value);
    }

}
